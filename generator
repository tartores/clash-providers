#!/usr/bin/env python3
# -*- coding: utf-8 -*-

#
# target_url = 'https://github.com/iina/iina/releases/download/v1.3.3/IINA.v1.3.3.dmg'
#

from cgi import print_arguments
import time, sys, os
from turtle import down

from urllib import request, parse
from urllib.error import HTTPError

time_start = time.time()

tmp_dir = os.path.join(os.getcwd(), '.tmp')

git_original = 'https://raw.githubusercontent.com'
git_mirror   = 'https://raw.gitmirror.com'
git_domain   = git_mirror

acl4ssr      = "ACL4SSR/ACL4SSR/master"

filename = "abcd.yaml"


def Logger(*args):
    print('\033[32m{}\033[0m'.format(*args), ''.join(args[1:]))



""" * """
def download(remote_url, save_as: str = None):
    def progress_handler(block_num, block_size, total_size):
        '''
        @desciption: 回调函数
            > block_num: 已经下载的数据块
            > block_size: 数据块的大小
            > total_size: 远程文件的大小
        '''
        sys.stdout.write('\r>> Downloading %s %.2f%%' % (filename, float(block_num * block_size) / float(total_size) * 100.0))
        sys.stdout.flush()

    opener = request.build_opener()
    opener.addheaders = [('User-agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36')]
    request.install_opener(opener)
    local_filename, headers = request.urlretrieve(remote_url, filename=save_as, reporthook=progress_handler)
    return local_filename



def get_cache_dir():
    """ 获取缓存目录：.tmp/<Year-Month-Day> """
    today = time.strftime('%Y-%m-%d', time.localtime())
    cache_dir = os.path.join(tmp_dir, today)
    if not os.path.exists(cache_dir):
        os.makedirs(cache_dir)
    return cache_dir


def update(r_name, r_list: tuple = ()):
    for r_url in r_list:
        print(f'{r_name} <== ', os.path.normpath(f'{git_mirror}/{acl4ssr}/{r_url}'))

        # download(os.path.normpath(f'{git_mirror}/{acl4ssr}'), os.path.join(get_cache_dir(), '360.list'))

if __name__ == "__main__":
    Logger('[开始]')
    Logger("[完成]")

    update('demo1', ('/Clash/Ruleset/360.list', '/Clash/Ruleset/58.list'))
    update('demo2', ('/Clash/Ruleset/ABC.list', '/Clash/Ruleset/Alibaba.list'))

    Logger("[耗时]", '{:.2f}ms'.format(1000 * (time.time() - time_start)))
